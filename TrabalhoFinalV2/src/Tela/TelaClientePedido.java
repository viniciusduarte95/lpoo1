package Tela;


import Pedido.ItemPedido;
import Pedido.TabelaPedido;
import Pedido.Pedido;
import Cliente.TabelaCliente;
import Cliente.Cliente;
////import Pedido.TabelaPrecoPizza;
import forma.Quadrado;
import forma.Triangular;
import forma.Forma;
import forma.Redondo;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vduarte
 */
public class TelaClientePedido extends javax.swing.JFrame {
    private final TabelaCliente tc = new TabelaCliente();
    ////private final TabelaPrecoPizza tpp = new TabelaPrecoPizza();
    private final List<Cliente> listaDeClientes = new ArrayList();
    private List<Cliente> listaPorFiltro = new ArrayList();
    private int linhaClicadaC = -1, linhaClicadaP = -1;
    private final TabelaPedido tp = new TabelaPedido();
    private final List<ItemPedido> listaDeItens = new ArrayList();
    private double precoSimples = 10.00;
    private double precoEspecial = 16.00;
    private double precoPremium = 25.00;
    private final List<Pedido> listaDePedidos = new ArrayList();
    private final List<ItemPedido> itemLinha = new ArrayList();
    //private final List<ItemPedido> itensPedido = new ArrayList();
    
    public TelaClientePedido() {
        initComponents();
        comboForma.addItem("Formato Quadrado");
        comboForma.addItem("Formato Triangular");
        comboForma.addItem("Formato Redondo");
        comboPedidoTipoPizza.addItem("Simples");
        comboPedidoTipoPizza.addItem("Especial");
        comboPedidoTipoPizza.addItem("Premium");
        comboTipoPizza.addItem("Simples");
        comboTipoPizza.addItem("Especial");
        comboTipoPizza.addItem("Premium");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        labelNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        labelSobrenome = new javax.swing.JLabel();
        txtSobrenome = new javax.swing.JTextField();
        labelCPF = new javax.swing.JLabel();
        incluirCliente = new javax.swing.JButton();
        atualizarCliente = new javax.swing.JButton();
        excluirCliente = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCliente = new javax.swing.JTable();
        txtTelefone = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        tituloCliente = new javax.swing.JLabel();
        pedidoCPFCliente = new javax.swing.JLabel();
        pesquisar = new javax.swing.JButton();
        pedidoNomeCliente = new javax.swing.JLabel();
        txtPedidoNome = new javax.swing.JTextField();
        pedidoSobrenomeCliente = new javax.swing.JLabel();
        txtPedidoSobrenome = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        tituloItemDePedido = new javax.swing.JLabel();
        pedidoForma = new javax.swing.JLabel();
        comboForma = new javax.swing.JComboBox<>();
        pedidoMaterial = new javax.swing.JLabel();
        comboPedidoTipoPizza = new javax.swing.JComboBox<>();
        pedidoL1 = new javax.swing.JLabel();
        txtPedidoL1 = new javax.swing.JTextField();
        pedidoTamanho = new javax.swing.JLabel();
        txtTamanho = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        tituloItemDoPedido = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePedido = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        precoTotal = new javax.swing.JTextField();
        alterarItem = new javax.swing.JButton();
        excluirItem = new javax.swing.JButton();
        inserirItem = new javax.swing.JButton();
        tituloItemDePedido1 = new javax.swing.JLabel();
        txtPedidoTelefone = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        labelMaterial = new javax.swing.JLabel();
        comboTipoPizza = new javax.swing.JComboBox<>();
        labelPrecoM2 = new javax.swing.JLabel();
        txtPrecoM2 = new javax.swing.JTextField();
        atualizaPreco = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        labelNome.setText("Nome");

        labelSobrenome.setText("Sobrenome");

        labelCPF.setText("Telefone");

        incluirCliente.setText("Incluir");
        incluirCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                incluirClienteMouseClicked(evt);
            }
        });
        incluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incluirClienteActionPerformed(evt);
            }
        });

        atualizarCliente.setText("Atualizar");
        atualizarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizarClienteMouseClicked(evt);
            }
        });
        atualizarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarClienteActionPerformed(evt);
            }
        });

        excluirCliente.setText("Excluir");
        excluirCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                excluirClienteMouseClicked(evt);
            }
        });
        excluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirClienteActionPerformed(evt);
            }
        });

        tableCliente.setModel(tc);
        tableCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCliente);

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNome)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelSobrenome, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(labelCPF)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome)
                            .addComponent(txtSobrenome)
                            .addComponent(txtTelefone)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(incluirCliente)
                        .addGap(18, 18, 18)
                        .addComponent(excluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(atualizarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSobrenome)
                    .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCPF)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incluirCliente)
                    .addComponent(atualizarCliente)
                    .addComponent(excluirCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cliente", jPanel1);

        tituloCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tituloCliente.setText("Pizzaria");

        pedidoCPFCliente.setText("Telefone");

        pesquisar.setText("Pesquisar");
        pesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesquisarMouseClicked(evt);
            }
        });

        pedidoNomeCliente.setText("Nome:");

        txtPedidoNome.setEditable(false);
        txtPedidoNome.setBackground(new java.awt.Color(204, 204, 204));

        pedidoSobrenomeCliente.setText("Sobrenome:");

        txtPedidoSobrenome.setEditable(false);
        txtPedidoSobrenome.setBackground(new java.awt.Color(204, 204, 204));

        tituloItemDePedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tituloItemDePedido.setText("Pedido do Cliente");

        pedidoForma.setText("Forma da Pizza:");

        comboForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFormaActionPerformed(evt);
            }
        });

        pedidoMaterial.setText("Tipo da pizza");

        comboPedidoTipoPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPedidoTipoPizzaActionPerformed(evt);
            }
        });

        pedidoL1.setText("Lado Y (cm²)");

        txtPedidoL1.setText("0");
        txtPedidoL1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPedidoL1KeyReleased(evt);
            }
        });

        pedidoTamanho.setText("Área da forma (cm²)");

        txtTamanho.setText("0");
        txtTamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTamanhoActionPerformed(evt);
            }
        });
        txtTamanho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTamanhoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTamanhoKeyReleased(evt);
            }
        });

        tituloItemDoPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tituloItemDoPedido.setText("Resumo do Pedido");

        tablePedido.setModel(tp);
        tablePedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePedidoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablePedido);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Total:      R$");

        precoTotal.setEditable(false);
        precoTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precoTotal.setText("0.00");

        alterarItem.setText("Alterar Item do Pedido");
        alterarItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alterarItemMouseClicked(evt);
            }
        });

        excluirItem.setText("Excluir Item do Pedido");
        excluirItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                excluirItemMouseClicked(evt);
            }
        });

        inserirItem.setText("Inserir Item do Pedido");
        inserirItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inserirItemMouseClicked(evt);
            }
        });
        inserirItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirItemActionPerformed(evt);
            }
        });

        tituloItemDePedido1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tituloItemDePedido1.setText("Item de Pedido");

        try {
            txtPedidoTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(290, 630, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(precoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pedidoMaterial)
                                    .addComponent(pedidoL1)
                                    .addComponent(pedidoTamanho)
                                    .addComponent(pedidoForma))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboForma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboPedidoTipoPizza, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPedidoL1)
                                    .addComponent(txtTamanho)))
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(alterarItem)
                                .addGap(37, 37, 37)
                                .addComponent(excluirItem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                                .addComponent(inserirItem))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tituloItemDePedido)
                                    .addComponent(tituloItemDoPedido))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pedidoCPFCliente)
                                    .addComponent(pedidoNomeCliente)
                                    .addComponent(pedidoSobrenomeCliente))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPedidoNome)
                                    .addComponent(txtPedidoSobrenome, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                                    .addComponent(txtPedidoTelefone))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pesquisar)
                                .addGap(18, 18, 18))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(354, 354, 354)
                                .addComponent(tituloItemDePedido1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(387, 387, 387)
                                .addComponent(tituloCliente)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(tituloItemDePedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pedidoCPFCliente)
                            .addComponent(txtPedidoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pedidoNomeCliente)
                            .addComponent(txtPedidoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(pesquisar)
                        .addGap(27, 27, 27)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pedidoSobrenomeCliente)
                    .addComponent(txtPedidoSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(tituloItemDePedido1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pedidoForma)
                    .addComponent(comboForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pedidoMaterial)
                    .addComponent(comboPedidoTipoPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pedidoL1)
                    .addComponent(txtPedidoL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pedidoTamanho)
                    .addComponent(txtTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alterarItem)
                    .addComponent(excluirItem)
                    .addComponent(inserirItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(tituloItemDoPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pedido", jPanel2);

        labelMaterial.setText("Material");

        labelPrecoM2.setText("Preço do cm²");

        txtPrecoM2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoM2ActionPerformed(evt);
            }
        });

        atualizaPreco.setText("Atualizar");
        atualizaPreco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atualizaPrecoMouseClicked(evt);
            }
        });
        atualizaPreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizaPrecoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(atualizaPreco)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPrecoM2)
                            .addComponent(labelMaterial))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboTipoPizza, 0, 216, Short.MAX_VALUE)
                            .addComponent(txtPrecoM2))))
                .addContainerGap(546, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMaterial)
                    .addComponent(comboTipoPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrecoM2)
                    .addComponent(txtPrecoM2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(atualizaPreco)
                .addContainerGap(571, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Atualiza Preço", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void incluirClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_incluirClienteMouseClicked
        if(txtNome.getText().equals("") || txtSobrenome.getText().equals("") || txtTelefone.getText().equals("")){
            
        }else{
            String nome = txtNome.getText();
            String sobrenome = txtSobrenome.getText();
            //int cpf = Integer.parseInt(txtCPF.getText());
            String telefone = txtTelefone.getText();

            Cliente cliente = new Cliente(-1L,nome,sobrenome, telefone);
            listaDeClientes.add(cliente);
            tc.adicionaCliente(cliente);
        }
    }//GEN-LAST:event_incluirClienteMouseClicked

    private void atualizarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizarClienteMouseClicked
        if(linhaClicadaC!=-1){
            Cliente cliente = tc.getCliente(linhaClicadaC);
            String telefone = cliente.getTelefone();
            cliente.setNome(txtNome.getText());
            cliente.setSobrenome(txtSobrenome.getText());
            cliente.setTelefone(txtTelefone.getText());
            //Atualiza tabela
            tc.fireTableRowsUpdated(linhaClicadaC, linhaClicadaC);
            for(int i = 0; i < listaDePedidos.size(); i++){
                if(listaDePedidos.get(i).getTelefone().equals(telefone)){
                    listaDePedidos.get(i).setTelefone(txtTelefone.getText());
                }
            }
        }
    }//GEN-LAST:event_atualizarClienteMouseClicked

    private void tableClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClienteMouseClicked
        //Pega a linha clicada
        linhaClicadaC = tableCliente.rowAtPoint(evt.getPoint());
        //Pega o cliente da linha clidada
        Cliente cliente = tc.getCliente(linhaClicadaC);
        //Seta os dados nos componentes
        txtNome.setText(cliente.getNome());        
        txtSobrenome.setText(cliente.getSobrenome());
        txtTelefone.setText(cliente.getTelefone());
    }//GEN-LAST:event_tableClienteMouseClicked

    private void excluirClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excluirClienteMouseClicked
        int[] linhasSelecionadas = tableCliente.getSelectedRows();
        List<Cliente> listaExcluir = new ArrayList();
        String telefone = txtTelefone.getText();
        for (int i = 0; i < linhasSelecionadas.length; i++) {
            Cliente cliente = tc.getCliente(linhasSelecionadas[i]);
            listaExcluir.add(cliente);

        }
        for(Cliente cliente:listaExcluir){
            listaDeClientes.remove(cliente);
            tc.removeCliente(cliente);
        }
        for(int i = 0; i < listaDePedidos.size(); i++){
            if(listaDePedidos.get(i).getTelefone().equals(telefone)){
                listaDePedidos.remove(listaDePedidos.get(i));
            }
        }
    }//GEN-LAST:event_excluirClienteMouseClicked

    private void comboFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFormaActionPerformed
        String f = (String) comboForma.getSelectedItem();
        
        if(f.equals("Formato Quadrado")){
            pedidoL1.setText("Lado (cm²):");
        }else if(f.equals("Formato Triangular")){
            pedidoL1.setText("Lado (cm²):");
        }else{
            pedidoL1.setText("Raio(cm²):");           
        }
    }//GEN-LAST:event_comboFormaActionPerformed

    private void pesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesquisarMouseClicked
        int i;
        double preco = 0;
        boolean achou = false;
        for(i = 0; i < listaDeClientes.size(); i++){
            if(listaDeClientes.get(i).getTelefone().equals(txtPedidoTelefone.getText())){
                txtPedidoNome.setText(listaDeClientes.get(i).getNome());
                txtPedidoSobrenome.setText(listaDeClientes.get(i).getSobrenome());
                achou = true;
            }
        }
        if(!achou){
            txtPedidoNome.setText("");
            txtPedidoSobrenome.setText("");
            //precoTotal.setText("0.00");
            tp.limpaTabela();
        }else{
            for(i = 0; i < listaDePedidos.size(); i++){
                if(listaDePedidos.get(i).getTelefone().equals(txtPedidoTelefone.getText())){
                    preco = listaDePedidos.get(i).getValorTotal();
                }
            }
            String tot = Double.toString(preco);
            precoTotal.setText(tot);
            tp.limpaTabela();
            for(i = 0; i < listaDePedidos.size(); i++){
                if(listaDePedidos.get(i).getTelefone().equals(txtPedidoTelefone.getText())){
                    System.out.println("num de itens = " + listaDePedidos.get(i).getItens().size());
                    for(int j = 0; j < listaDePedidos.get(i).getItens().size(); j++){
                        String forma = listaDePedidos.get(i).getItens().get(j).getForma();
                        String mat = listaDePedidos.get(i).getItens().get(j).getTipoDaPizza();
                        double tam = listaDePedidos.get(i).getItens().get(j).getTamanho();
                        double valor = listaDePedidos.get(i).getItens().get(j).getPrecoItem();
                        ItemPedido recupera = new ItemPedido(-1L, forma, mat, tam, valor);
                        tp.adicionaItemPedido(recupera);
                    }
                }
            }
        }
    }//GEN-LAST:event_pesquisarMouseClicked

    private void txtTamanhoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTamanhoKeyReleased
        if(((txtTamanho.getText().length() >= 0) || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) && !txtTamanho.getText().equals("")){
            calculaLados();
        }else{
            txtPedidoL1.setText("");
        }
    }//GEN-LAST:event_txtTamanhoKeyReleased

    private void inserirItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inserirItemMouseClicked
        int i, c;
        boolean achou = false, novo = true;
        if(txtPedidoTelefone.getText().equals("") || txtPedidoL1.getText().equals("")){
            
        }else{
            String f = (String) comboForma.getSelectedItem();
            String m = (String) comboPedidoTipoPizza.getSelectedItem();
            String tamanho = txtTamanho.getText();
            double t = Double.parseDouble(tamanho);
            double preco;
            ItemPedido ip = new ItemPedido(-1L, f, m, t, 0.00);
            if(m.equals("Simples")){
                ip.setPrecoSimples(precoSimples);
                preco = ip.getPrecoSimples();
            }else if(m.equals("Especial")){
                ip.setPrecoEspecial(precoEspecial);
                preco = ip.getPrecoEspecial();
            }else{
                ip.setPrecoPremium(precoPremium);
                preco = ip.getPrecoPremium();
            }
            ip.calculaPrecoItem(preco);
            listaDeItens.add(ip);
            tp.adicionaItemPedido(ip);
            
            
            //inserido depois
            String telefone;
            for(i = 0; i < listaDeClientes.size(); i++){
                if(listaDeClientes.get(i).equals(txtPedidoTelefone.getText())){
                    achou = true;
                }
            }
            for(i = 0; i < listaDePedidos.size(); i++){
                if(listaDePedidos.get(i).getTelefone().equals(txtPedidoTelefone.getText())){
                    novo = true;
                }
            }
            
            
            calculaPrecoTotal("incluir");
            ItemPedido incluiItemPedido = itemLinha.get(itemLinha.size() - 1);
            Double precoT = Double.parseDouble(precoTotal.getText());
           
            for(i = 0; i < listaDePedidos.size(); i++){
                if(listaDePedidos.get(i).getTelefone().equals(txtPedidoTelefone.getText())){
                    System.out.println(incluiItemPedido.getId() + "/" + incluiItemPedido.getForma() + "/" + incluiItemPedido.getTipoDaPizza() + "/" + incluiItemPedido.getTamanho() + "/" + itemLinha.get(itemLinha.size() - 1).getPrecoItem());
                    listaDePedidos.get(i).setValorTotal(precoT);
                    for(int j = 0; j < listaDePedidos.get(i).getItens().size(); j++){
                        String forma = listaDePedidos.get(i).getItens().get(j).getForma();
                        String mat = listaDePedidos.get(i).getItens().get(j).getTipoDaPizza();
                        Double tam = listaDePedidos.get(i).getItens().get(j).getTamanho();
                        Double p = listaDePedidos.get(i).getItens().get(j).getPrecoItem();

                    }
                }
            }
            
            
            
            
            //listaDeItens.add(ip);
            //tp.adicionaItemPedido(ip);
        }
    }//GEN-LAST:event_inserirItemMouseClicked

    private void excluirItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_excluirItemMouseClicked
        int i;
        ItemPedido alteraPedido = itemLinha.get(itemLinha.size() - 1);
        int[] linhasSelecionadas = tablePedido.getSelectedRows();
        List<Pedido> listaExcluirItemPedido = new ArrayList();
        List<ItemPedido> listaExcluirPedido = new ArrayList();
        for (i = 0; i < linhasSelecionadas.length; i++) {
            ItemPedido ip = tp.getItemPedido(linhasSelecionadas[i]);
            listaExcluirPedido.add(ip);

        }
        for(ItemPedido ip:listaExcluirPedido){
            listaDeItens.remove(ip);
            tp.removeItemPedido(ip);
        }
        calculaPrecoTotal("excluir");
        Double precoT = Double.parseDouble(precoTotal.getText());
        for(i = 0; i < listaDePedidos.size(); i++){
            if(listaDePedidos.get(i).getTelefone().equals(txtPedidoTelefone.getText())){
                listaDePedidos.get(i).setValorTotal(precoT);
            }
        }
        for(int j = 0; j < listaDePedidos.get(i).getItens().size(); j++){
            String forma = listaDePedidos.get(i).getItens().get(j).getForma();
            String mat = listaDePedidos.get(i).getItens().get(j).getTipoDaPizza();
            Double tam = listaDePedidos.get(i).getItens().get(j).getTamanho();
            Double p = listaDePedidos.get(i).getItens().get(j).getPrecoItem();
            ItemPedido linha = new ItemPedido(-1L, forma, mat, tam, p);
            if(forma.equals(alteraPedido.getForma()) && mat.equals(alteraPedido.getTipoDaPizza()) && tam.equals(alteraPedido.getTamanho()) && p == alteraPedido.getPrecoItem()){
                listaDePedidos.get(i).getItens().remove(linha);
            }
        }
        System.out.println(listaDePedidos.get(listaDePedidos.size() - 1).getId() + " " + listaDePedidos.get(listaDePedidos.size() - 1).getTelefone() + "\t" + listaDePedidos.get(listaDePedidos.size() - 1).getValorTotal());
    }//GEN-LAST:event_excluirItemMouseClicked

    private void alterarItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alterarItemMouseClicked
        if(linhaClicadaP!=-1){
            ItemPedido alteraPedido = itemLinha.get(itemLinha.size() - 1);
            ItemPedido ip = tp.getItemPedido(linhaClicadaP);
            String f = (String) comboForma.getSelectedItem();
            ip.setForma(f);
            String m = (String) comboPedidoTipoPizza.getSelectedItem();
            ip.setTipoDaPizza(m);
            double t = Double.parseDouble(txtTamanho.getText());
            ip.setTamanho(t);
            double preco = 0;
            if(m.equals("Simples")){
                preco = ip.getPrecoSimples();
            }else if(m.equals("Especial")){
                preco = ip.getPrecoEspecial();
            }else{
                preco = ip.getPrecoPremium();
            }
            ip.calculaPrecoItem(preco);
            /*cliente.setNome(txtNome.getText());
            cliente.setSobrenome(txtSobrenome.getText());
            cliente.setCpf(txtCPF.getText());*/
            //Atualiza tabela
            tp.fireTableRowsUpdated(linhaClicadaP, linhaClicadaP);
            calculaPrecoTotal("atualizar");
            Double precoT = Double.parseDouble(precoTotal.getText());
            for(int i = 0; i < listaDePedidos.size(); i++){
                if(listaDePedidos.get(i).getTelefone().equals(txtPedidoTelefone.getText())){
                    System.out.println(alteraPedido.getId() + "/" + alteraPedido.getForma() + "/" + alteraPedido.getTipoDaPizza() + "/" + alteraPedido.getTamanho() + "/" + itemLinha.get(itemLinha.size() - 1).getPrecoItem());
                    listaDePedidos.get(i).setValorTotal(precoT);
                    for(int j = 0; j < listaDePedidos.get(i).getItens().size(); j++){
                        String forma = listaDePedidos.get(i).getItens().get(j).getForma();
                        String mat = listaDePedidos.get(i).getItens().get(j).getTipoDaPizza();
                        Double tam = listaDePedidos.get(i).getItens().get(j).getTamanho();
                        Double p = listaDePedidos.get(i).getItens().get(j).getPrecoItem();
                        if(forma.equals(alteraPedido.getForma()) && mat.equals(alteraPedido.getTipoDaPizza()) && tam.equals(alteraPedido.getTamanho()) && p == alteraPedido.getPrecoItem()){
                            //System.out.println("DEU CERTO \t" + ip.getPrecoItem());
                            //System.out.println("DEU CERTO \t" + listaDePedidos.get(0).getItens().get(0).getPrecoItem());
                            listaDePedidos.get(0).getItens().get(0).setForma(ip.getForma());
                            listaDePedidos.get(0).getItens().get(0).setTipoDaPizza(ip.getTipoDaPizza());
                            listaDePedidos.get(0).getItens().get(0).setTamanho(ip.getTamanho());
                            listaDePedidos.get(0).getItens().get(0).setPrecoItem(ip.getPrecoItem());
                        }
                    }
                }
            }
            //System.out.println(listaDePedidos.get(listaDePedidos.size() - 1).getId() + " " + listaDePedidos.get(listaDePedidos.size() - 1).getCpfCliente() + "\t" + listaDePedidos.get(listaDePedidos.size() - 1).getValorTotal());
        }
    }//GEN-LAST:event_alterarItemMouseClicked

    private void tablePedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePedidoMouseClicked
        //Pega a linha clicada
        linhaClicadaP = tablePedido.rowAtPoint(evt.getPoint());
        //Pega o contato da linha clidada
        ItemPedido item = tp.getItemPedido(linhaClicadaP);
        //Seta os dados nos componentes
        /*txtNome.setText(cliente.getNome());        
        txtSobrenome.setText(cliente.getSobrenome());
        txtCPF.setText(cliente.getCpf());*/
        Long id = item.getId();
        comboForma.setSelectedItem(item.getForma());
        String comboforma = (String) comboForma.getSelectedItem();
        comboPedidoTipoPizza.setSelectedItem(item.getTipoDaPizza());
        String combopedidoTipoPizza = (String) comboPedidoTipoPizza.getSelectedItem();
        txtPedidoL1.setText("");
        String t = Double.toString(item.getTamanho());
        txtTamanho.setText(t);
        Double tamanhoPizza = Double.parseDouble(t);
        ItemPedido teste = new ItemPedido(-1L, comboforma, combopedidoTipoPizza, tamanhoPizza, item.getPrecoItem());
        itemLinha.add(teste);
    }//GEN-LAST:event_tablePedidoMouseClicked

    private void atualizaPrecoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atualizaPrecoMouseClicked
        int i;
        String material = (String) comboTipoPizza.getSelectedItem();
        double cm2 = Double.parseDouble(txtPrecoM2.getText());
        if(material.equals("Simples")){
            precoSimples = cm2;
        }else if(material.equals("Especial")){
            precoEspecial = cm2;
        }else{
            precoPremium = cm2;
        }
        for(i = 0; i < listaDeItens.size(); i++){
            if(listaDeItens.get(i).getTipoDaPizza().equals(material)){
                ItemPedido ip = listaDeItens.get(i);
                ip.atualizaPrecos(cm2);
            }
        }
    }//GEN-LAST:event_atualizaPrecoMouseClicked

    private void txtPedidoL1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPedidoL1KeyReleased
        if(((txtPedidoL1.getText().length() >= 0) || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) && !txtTamanho.getText().equals("")){
            String forma = (String) comboForma.getSelectedItem();
            if(forma.equals("Formato Quadrado")){
                Forma f = new Quadrado(Double.parseDouble(txtPedidoL1.getText()));
                String cm2 = Double.toString(f.cm2());
                txtTamanho.setText(cm2);
            }else if(forma.equals("Formato Triangular")){
                Forma f = new Triangular(Double.parseDouble(txtPedidoL1.getText()));
                String cm2 = Double.toString(f.cm2());
                txtTamanho.setText(cm2);
            }else{
                Forma f = new Redondo(Double.parseDouble(txtPedidoL1.getText()));
                String cm2 = Double.toString(f.cm2());
                txtTamanho.setText(cm2);
            }
        }
    }//GEN-LAST:event_txtPedidoL1KeyReleased

    private void txtTamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTamanhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTamanhoActionPerformed

    private void excluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_excluirClienteActionPerformed

    private void atualizaPrecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizaPrecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizaPrecoActionPerformed

    private void inserirItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inserirItemActionPerformed

    private void incluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incluirClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_incluirClienteActionPerformed

    private void txtPrecoM2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoM2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoM2ActionPerformed

    private void txtTamanhoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTamanhoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTamanhoKeyPressed

    private void comboPedidoTipoPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPedidoTipoPizzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPedidoTipoPizzaActionPerformed

    private void atualizarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarClienteActionPerformed
    ///verificar o calculo das areas*****
    public void calculaLados(){
        String f = (String) comboForma.getSelectedItem();
        String tamanho = txtTamanho.getText();
        double cm2 = Double.parseDouble(tamanho);
        if(f.equals("Formato Quadrado")){
            cm2 = Math.sqrt(cm2);
            String l1 = Double.toString(cm2);
            txtPedidoL1.setText(l1);
        }else if(f.equals("Formato Triangular")){
        cm2 = Math.sqrt(cm2);
            String l1 = Double.toString(cm2);
            txtPedidoL1.setText(l1);
            
        }else if(f.equals("Redondo")){
            //cm2 = cm2/Math.PI; deletado pq entendo que esta errado
            cm2=Math.PI*Math.pow(cm2,2);
            String l1 = Double.toString(cm2);
            txtPedidoL1.setText(l1);
        }
    }
    
    public void calculaPrecoTotal(String metodo){
        int i;
        if(metodo.equals("incluir")){
            double soma = Double.parseDouble(precoTotal.getText());
            /*for(i = 0; i < listaDeItens.size(); i++){
                soma = soma + listaDeItens.get(i).getPrecoItem();
            }*/
            soma += listaDeItens.get(listaDeItens.size() - 1).getPrecoItem();
            String s = Double.toString(soma);
            System.out.println(soma);
            precoTotal.setText(s);
        }else if(metodo.equals("atualizar")){
            double soma = 0;
            for(i = 0; i < tp.getRowCount(); i++){
                soma += (Double) tp.getItemPedido(i).getPrecoItem();
            }
            String s = Double.toString(soma);
            precoTotal.setText(s);
        }else{
            double soma = 0;
            for(i = 0; i < tp.getRowCount(); i++){
                soma += (Double) tp.getItemPedido(i).getPrecoItem();
            }
            String s = Double.toString(soma);
            precoTotal.setText(s);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaClientePedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaClientePedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaClientePedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaClientePedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaClientePedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarItem;
    private javax.swing.JButton atualizaPreco;
    private javax.swing.JButton atualizarCliente;
    private javax.swing.JComboBox<String> comboForma;
    private javax.swing.JComboBox<String> comboPedidoTipoPizza;
    private javax.swing.JComboBox<String> comboTipoPizza;
    private javax.swing.JButton excluirCliente;
    private javax.swing.JButton excluirItem;
    private javax.swing.JButton incluirCliente;
    private javax.swing.JButton inserirItem;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelCPF;
    private javax.swing.JLabel labelMaterial;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelPrecoM2;
    private javax.swing.JLabel labelSobrenome;
    private javax.swing.JLabel pedidoCPFCliente;
    private javax.swing.JLabel pedidoForma;
    private javax.swing.JLabel pedidoL1;
    private javax.swing.JLabel pedidoMaterial;
    private javax.swing.JLabel pedidoNomeCliente;
    private javax.swing.JLabel pedidoSobrenomeCliente;
    private javax.swing.JLabel pedidoTamanho;
    private javax.swing.JButton pesquisar;
    private javax.swing.JTextField precoTotal;
    private javax.swing.JTable tableCliente;
    private javax.swing.JTable tablePedido;
    private javax.swing.JLabel tituloCliente;
    private javax.swing.JLabel tituloItemDePedido;
    private javax.swing.JLabel tituloItemDePedido1;
    private javax.swing.JLabel tituloItemDoPedido;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPedidoL1;
    private javax.swing.JTextField txtPedidoNome;
    private javax.swing.JTextField txtPedidoSobrenome;
    private javax.swing.JFormattedTextField txtPedidoTelefone;
    private javax.swing.JTextField txtPrecoM2;
    private javax.swing.JTextField txtSobrenome;
    private javax.swing.JTextField txtTamanho;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
